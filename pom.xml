<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 项目配置，如果是有多个子项目, packaging一般是pom属性 -->
    <groupId>com.leo</groupId>
    <artifactId>mvn-study</artifactId>
    <version>1.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>mvn-study</name>
    <url>http://maven.apache.org</url>

    <!-- 各个子模块, 有顺序依赖 -->
    <modules>
        <module>basic-core-parent</module>
        <module>service-parent</module>
        <module>config</module>
    </modules>

    <!-- 系统的属性变量，可以通过${name}进行赋值 -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <workspace.path>${project.basedir}</workspace.path>
        <release.version>1.1-SNAPSHOT</release.version>
        <junit.version>4.12</junit.version>
        <server.ip>118.244.229.5</server.ip>
    </properties>

    <!-- 指定仓库下载地址，没有的话从全局的settings.xml中去取 -->
    <repositories>
        <repository>
            <id>alimaven</id>
            <name>aliyun maven</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
        </repository>
    </repositories>

    <!-- 指定插件仓库下载地址，没有的话从全局的settings.xml中去取 -->
    <pluginRepositories>
        <pluginRepository>
            <id>Plugin-releases</id>
            <url>http://${server.ip}:8081/artifactory/plugins-release/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </pluginRepository>

        <pluginRepository>
            <id>central</id>
            <name>Maven Repository Switchboard</name>
            <url>http://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>

    <!-- 配置部署的远程仓库 -->
    <!-- 分发管理, 用户名和密码配置在 settings.xml 里面 -->
    <distributionManagement>
        <!-- Publish versioned releases here -->
        <repository>
            <id>release</id>
            <name>Artifactory distribution 3rdParty repository</name>
            <url>http://${server.ip}:8081/artifactory/libs-release-local/</url>
        </repository>

        <snapshotRepository>
            <id>snapshot</id>
            <name>Artifactory distribution snapshot repository</name>
            <url>http://${server.ip}:8081/artifactory/libs-snapshot-local/</url>
        </snapshotRepository>
        <!-- mvn site:deploy 部署的位置 -->
        <site>
            <id>local</id>
            <name>filesystem</name>
            <!--&lt;!&ndash; 修改到磁盘的相应位置 &ndash;&gt;-->
            <url>file:D:\target\site</url>
        </site>
    </distributionManagement>

    <!-- 版本吧管理, 注意这个的意思是统一配置jar包的版本，在子项目中还是需要再次引入的。和单纯的dependencies不一样 -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 编译构建的时候,可以选择对应的插件 -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
